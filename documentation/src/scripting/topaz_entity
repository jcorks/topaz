///    Basic interactive object.
/// 
///    Entities are the main classes that are extended to meet abstractions for your 
///    multimedia project. By defining attributes the you can dynamically extend 
///    entities. By attaching components you can extend the entity further.
///
///    Entities are also inherently hierarchical. By Attach()ing other Entities,
///    you can create trees of self-managed Entities.
///
///    NULL is not accepted as an argument for any entity functions.
///    Instead, use the topaz_entity_null() value to represent this 
///    no-entity state. 
///
///
///
class Topaz.Entity


/// Returns whether this instance is valid or not.
/// Read-only.
@Boolean isValid

/// Removes the entity. After this call, uses of the entity will be invalid.
///
func remove ->

/// The number of child entities.
/// Read-only.
@Int childCount

/// Returns the n'th child Entity.
///
func nthChild -> Topaz.Entity
    /// The index to query.
    ///
    @Int n    


/// Returns all child entities
///
/// Entities are ordered by priority, where the first entity
/// is guaranteed to be the one with the lowest Priority value.
/// If the entity is not valid, the contents are undefined.
///
/// The Array may be set with a new Array containing the new children
/// to attach.
@Array children


/// Updates this entity, all child entities, and components.
/// Normally this is called for you under the topaz context.
///
func step -> 

/// Updates this entity, all child entities, and components
/// Normally this is called for you under the topaz context.
///
func draw ->

/// Attaches a child entity or component to this entity.
///
/// Once attached, the component's
/// Step and Draw functions will be called before this entity's Step and Draw.
///
func attach ->

    /// The child entity. Optional
    @Topaz.Entity entity

    /// The component to add to the entity. Optional
    @Topaz.Component component
    
    // If the component is present, the attached component
    // will be updated after this entity's step/draw calls.
    @Boolean addAfter
    

    

/// Detaches the entity from its parent.
///
func detach ->


/// Sets/Gets the parent entity. This will 
/// automatically detach / attach the entities involved.
@Topaz.Entity parent

/// Returns the first child entity with the given name.
/// Only the immediate children are checked.
///
func query -> Topaz.Entity

    /// The name to search.
    @String name
    
    
/// Returns the first child entity with the given name, but 
/// searches recursively.
///
func search -> Topaz.Entity 

    /// The name to search.
    @String name 
    
/// Sets / Gets the priority.
/// Priority determines the order in which this
/// entity is updated. A lower priority means it will be drawn and updated earlier.
/// It is undefined which entity is updated first if both have the same priority.
@Int priority

/// Sends the entity to be the first entity to be updated.
///
func setPriorityFirst ->

/// Sends the entity to be the last eneity to be updated.
///
func setPriorityLast ->

/// Sets / Gets the rotation of the entity.
/// Components are editable as well.
@Object rotation

/// Sets / Gets the position of the entity.
/// Components are editable as well.
@Object position

/// Sets / Gets the scale of the entity.
/// Components are editable as well.
@Object scale

/// Gets the global position of the entity.
@Object globalPosition

/// Returns wether or not the Engine is handling calling Step() automatically,
/// taking Into account the Entity's hierarchy.
/// (Read-only)
///
@Boolean isStepping 

/// Returns wether or not the Engine is handling calling Draw() automatically,
/// taking Into account the Entity's hierarchy.
///
@Boolean isDrawing 

/// Whether the engine should call Step() automatically for this entity.
/// Note that topaz_entity_step() calls also manage components and child entities.
/// The default is true.
///
@Boolean stepping 

/// Whether the engine should call Draw() automatically for this entity.
/// Note that topaz_entity_draw() calls also manage components and child entities.
/// The default is true.
///
@Boolean drawing

/// Sets/Gets the name of the entity.
///
@String name








/// If read, returns an Array of all attached components.
/// If written to, removes all current components and 
/// instead attaches all the given components.
@Array components


/// Returns the first component with the given tag.
func queryComponent -> Topaz.Component

    /// The tag to search within the entity.
    @String tag
    
    
/// Removes the given component from the entity.
///
func removeComponent -> 
    /// The component to remove.
    @String component
    
    
    
    
/// The function to run every step.
///
@Function onStep

/// The function to run every draw frame.
///
@Function onDraw

/// The function to run before every step.
///
@Function onPreStep

/// The function to run before every draw frame
///
@Function onPreDraw

/// The function to run when attaching this entity to a parent.
///
@Function onAttach


/// The function to run when detaching this entity to a parent.
///
@Function onDetach


/// The function to run when this entity is removed.
///
@Function onRemove


