/// The specification of a particle. This is used as a roadmap to 
/// generate a real particle instance using Topaz.ParticleEmitter2D.emit()
///
class Topaz.Particle 




/// Modifies a render parameters.
///
func setAttributes ->
    /// The primitive to use for the particle. Optional
    @Topaz.RENDERER.PRIMITIVE primitive
    
    /// The alpha rule to use for the effect. Optional
    @Topaz.RENDERER.ALPHA_RULE alphaRule
    
    // The depth test to use for the particle. Optional
    @Topaz.RENDERER.DEPTH_TEST depthTest
    
    // The masking rule to use for the particle. Optional
    @Topaz.RENDERER.ETCH_RULE etchRule
    
    // Texturing hint for the particle. Optional
    @Topaz.RENDERER.TEXTURE_FILTER_HINT textureFilterHint

/// The minimum value for the attribute to start.
///
func setNoiseMin ->
    /// The duration attribute, dictating how long the particle lasts.  Optional
    @Number duration 
    
    /// The scaling in the X direction for the particle.  Optional
    @Number scaleX 
    
    /// The scaling in the Y direction for the particle.  Optional
    @Number scaleY 
    
    /// The scaling multiplier to both X and Y for the particle.  Optional
    @Number scaleMultiplier
    
    /// Rotation of the particle in degrees. Optional
    @Number rotation 
    
    /// The direction rotation for movement of the particle in degrees. Optional
    @Number direction 
    
    /// The speed in the X direction, rotated by the direction. Optional.
    @Number speedX

    /// The speed in the Y direction, rotated by the direction. Optional.
    @Number speedY
    
    /// The red component of color on the range [0, 1]. Optional.
    @Number red 

    /// The green component of color on the range [0, 1]. Optional.
    @Number green 

    /// The blue component of color on the range [0, 1]. Optional.
    @Number blue 
    
    /// The alpha component of color on the range [0, 1]. Optional.
    @Number alpha
    
    
/// The maximum value for the attribute to start.
///
func setNoiseMax ->
    /// The duration attribute, dictating how long the particle lasts.  Optional
    @Number duration 
    
    /// The scaling in the X direction for the particle.  Optional
    @Number scaleX 
    
    /// The scaling in the Y direction for the particle.  Optional
    @Number scaleY 
    
    /// The scaling multiplier to both X and Y for the particle.  Optional
    @Number scaleMultiplier
    
    /// Rotation of the particle in degrees. Optional
    @Number rotation 
    
    /// The direction rotation for movement of the particle in degrees. Optional
    @Number direction 
    
    /// The speed in the X direction, rotated by the direction. Optional.
    @Number speedX

    /// The speed in the Y direction, rotated by the direction. Optional.
    @Number speedY
    
    /// The red component of color on the range [0, 1]. Optional.
    @Number red 

    /// The green component of color on the range [0, 1]. Optional.
    @Number green 

    /// The blue component of color on the range [0, 1]. Optional.
    @Number blue 
    
    /// The alpha component of color on the range [0, 1]. Optional.
    @Number alpha


/// The minimum value for the attribute to start.
///
func setOffsetMin ->
    /// The duration attribute, dictating how long the particle lasts.  Optional
    @Number duration 
    
    /// The scaling in the X direction for the particle.  Optional
    @Number scaleX 
    
    /// The scaling in the Y direction for the particle.  Optional
    @Number scaleY 
    
    /// The scaling multiplier to both X and Y for the particle.  Optional
    @Number scaleMultiplier
    
    /// Rotation of the particle in degrees. Optional
    @Number rotation 
    
    /// The direction rotation for movement of the particle in degrees. Optional
    @Number direction 
    
    /// The speed in the X direction, rotated by the direction. Optional.
    @Number speedX

    /// The speed in the Y direction, rotated by the direction. Optional.
    @Number speedY
    
    /// The red component of color on the range [0, 1]. Optional.
    @Number red 

    /// The green component of color on the range [0, 1]. Optional.
    @Number green 

    /// The blue component of color on the range [0, 1]. Optional.
    @Number blue 
    
    /// The alpha component of color on the range [0, 1]. Optional.
    @Number alpha
    
    
/// The maximum value for the attribute to start.
///
func setOffsetMax ->
    /// The duration attribute, dictating how long the particle lasts.  Optional
    @Number duration 
    
    /// The scaling in the X direction for the particle.  Optional
    @Number scaleX 
    
    /// The scaling in the Y direction for the particle.  Optional
    @Number scaleY 
    
    /// The scaling multiplier to both X and Y for the particle.  Optional
    @Number scaleMultiplier
    
    /// Rotation of the particle in degrees. Optional
    @Number rotation 
    
    /// The direction rotation for movement of the particle in degrees. Optional
    @Number direction 
    
    /// The speed in the X direction, rotated by the direction. Optional.
    @Number speedX

    /// The speed in the Y direction, rotated by the direction. Optional.
    @Number speedY
    
    /// The red component of color on the range [0, 1]. Optional.
    @Number red 

    /// The green component of color on the range [0, 1]. Optional.
    @Number green 

    /// The blue component of color on the range [0, 1]. Optional.
    @Number blue 
    
    /// The alpha component of color on the range [0, 1]. Optional.
    @Number alpha

/// Sets how the particle property modifies its value over 
/// its duration. animString is expected to be output from
/// topaz_automation_to_string() which will describe 
/// how the value changes from the start of its life to the end.
func setFunctions -> 
    /// The duration attribute, dictating how long the particle lasts.  Optional
    @String duration 
    
    /// The scaling in the X direction for the particle.  Optional
    @String scaleX 
    
    /// The scaling in the Y direction for the particle.  Optional
    @String scaleY 
    
    /// The scaling multiplier to both X and Y for the particle.  Optional
    @String scaleMultiplier
    
    /// Rotation of the particle in degrees. Optional
    @String rotation 
    
    /// The direction rotation for movement of the particle in degrees. Optional
    @String direction 
    
    /// The speed in the X direction, rotated by the direction. Optional.
    @String speedX

    /// The speed in the Y direction, rotated by the direction. Optional.
    @String speedY
    
    /// The red component of color on the range [0, 1]. Optional.
    @String red 

    /// The green component of color on the range [0, 1]. Optional.
    @String green 

    /// The blue component of color on the range [0, 1]. Optional.
    @String blue 
    
    /// The alpha component of color on the range [0, 1]. Optional.
    @String alpha

/// When read, returns string representation of the particle's
/// state, allowing for saving / loading the state of the particle.
/// When written, sets the particle specification from a string.
/// This string is assumed to have come from a
/// previously read particle string.
@String string 

/// Sets the base image to use for the particle.
/// Write-only.
@Topaz.Image image
