/// Inherits from Topaz.Component
///
/// Allows for running of functions at regular intervals.
class Topaz.Scheduler


/// The constructor requires a mode.
func [constructor] ->
    /// The mode to use.
    Topaz.Scheduler.Mode mode


/// Assigns a new task for the scheduler to process. Once 
/// the interval time has elapsed, the callback will be called.
/// Callback is called when the interval expires with the given callbackData
/// as argument.
func startTask ->
    /// The name of the task to add.
    String taskName 
    /// How often the task will run. If the mode is topazScheduler_Mode_Time,
    /// the interval is a time in milliseconds. If the mode is 
    /// topazScheduler_Mode_Frame, the the interval is the number 
    /// of frames.
    Int interval 
    /// The initial delay before the task starts being measured.
    Int initialDelay
    Function callback

/// Same as topaz_scheduler_start_task except will simplified inputs:
/// - No interval delay is given
/// - a default name is generated 
/// The task name is returned.
func startTaskSimple -> String 
    /// How often the task will run. If the mode is topazScheduler_Mode_Time,
    /// the interval is a time in milliseconds. If the mode is 
    /// topazScheduler_Mode_Frame, the the interval is the number 
    /// of frames.
    Int interval 
    Function callback 


/// Halts the task with the given name.
/// If no such task exists, no action is taken.
///
func endTask ->
    /// The name of the task to remove. 
    String taskName

/// Stops processing and timing of tasks until topaz_scheduler_resume() is called.
///
func pause ->
    /// The scheduler to pause.
    String taskName

/// Resumes processing of tasks once more. If the scheduler was not 
/// paused, no action is taken.
func resume ->
    /// The scheduler to resume.
    String taskName 


/// Gets the interval amount before the task interval
/// is next complete.
func getTaskIntervalRemaining -> Number 
    /// The name of the task to query.
    String taskName 

/// Returns an array of the names of all tasks currently running.
/// 
Array tasks