/// Inherits from Topaz.Asset.
///
/// A collection of vertex data and indices into 
/// the collection to form 3D meshes.
///
/// Vertices in topaz meshes are laid out like so:
///     3 values for position (x, y, z)
///     3 values for normals  (x, y, z) 
///     2 values for UVs / texture coordinates (u, v)
///     4 values for user data
/// Collections of indices are referred to as "objects", meshes 
/// may contain any number of objects.
class Topaz.Mesh


/// Sets/Gets the total number of vertices within the mesh.
/// Note that setting the vertex count may trigger an internal 
/// resize of buffers for storing vertices. The vertexCount must be set 
/// before reading / writing to vertices.
Int vertexCount


/// Sets/Gets the raw vertex data as a simple array of Numbers.
///
Array vertices


/// Sets a specific vertex's data.
func setVertex ->
    /// The index of the vertex to modify.
    Int index 
    /// A simple array of Numbers to update the vertex to.
    Array values 
    
    
/// Gets a specific vertex's data.
func getVertex -> Array
    /// The index of the vertex to query.
    Int index
    
/// Adds a new object.  This function creates a new instance
/// and its index is returned. This index can be used with topaz_mesh_get_object 
/// to modify and read from.
///
func addObject -> 
    /// Optional array of indices to initialize the object with.
    Array indices


/// Returns the current object count.
/// Read-only.
Int objectCount


/// Removes the specified object.
func removeObject -> 
    /// The index of the object to remove.
    Int objectIndex
    
    
    

