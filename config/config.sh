#!/bin/bash

cd ../system/

cflags=""
csources=""
clibraries=""
configsource=""
configincludes=""

compiler=""
cc --help 2>/dev/nul 1>/dev/nul 
ccresult=$?

if [ "$cc" != "" ]; then 
    compiler="$cc"
elif [ "$ccresult" -eq "0" ]; then 
    compiler="cc"
else 
    echo "No compiler detected. Set the environment variable 'CC' to the compiler binary to continue."
    exit 1
fi 

# for each directory, gather
for D in *; do
    if [ -d "${D}" ]; then
        cd ${D}

        localflags=$(cat C_FLAGS 2>/dev/nul)
        localsources=$(cat C_SOURCES 2>/dev/nul)
        locallibraries=$(cat C_LIBRARIES 2>/dev/nul)
        localtestc=$(cat C_TESTC 2>/dev/nul)
        if [ "$localtestc" = "" ]; then 
            echo "int main(){}" > .test.c 
        else 
            cp ./C_TESTC ./.test.c
        fi
        #cat ./.test.c
        $compiler $localflags .test.c $locallibraries -o .test.exe 2>/dev/nul
        result=$?
        # echo "gcc @ $result"

        # test if the backend is viable
        rm -f .test.c 
        rm -f .test.exe


        # break up directory
        backendType=""
        backendName=""
        IFSOLD=$IFS 
        IFS='_'; 
        index=0
        for word in ${D}; do 
            if [ "$index" -eq "0" ]; then 
                backendType=$word
            elif [ "$index" -eq "1" ]; then 
                backendName=$word
            fi
            index=$(($index+1))
        done
        IFS=$IFSOLD


        echo "backendName: $backendName"
        echo "backendType: $backendType"

        if [ $result -eq "0" ]; then 
            cflags="$cflags $localcflags" 
            csources="$csources $localsources"
            clibraries="$clibraries $locallibraries"

            configsource=$(echo -e "    ${configsource}\ntopaz_system_config_add_handler(\"${backendType}\", \"${backendName}\", topaz_system_${backendType}_${backendName}__backend, (void (*)(void *)) topaz_system_${backendType}_${backendName}__api);")
            configheader=$(echo -e "${configheader}\n#include \"../system/${D}/src/backend.h\"")
            echo "Supports ${D}? ... Yes"
        else 
            echo "Supports ${D}? ... No"
        fi




        cd ..
    fi
done

cd ../config/

echo -e "// autogenerated using config.sh\n" > config.c
echo "$configheader" >> config.c
echo -e "void topaz_system_configure() {\n" >> config.c
echo "$configsource" >> config.c
echo -e "}\n" >> config.c


echo "$cflags" > ./CONFIG_CFLAGS
echo "$csources" > ./CONFIG_CSOURCES
echo "$clibraries" > ./CONFIG_LIBRARIES


echo "CFLAGS: $cflags"
echo "SOURCES: $csources"
echo "LIBRARIES: $clibraries"

echo "CONFIG SOURCE:"
cat ./config.c


